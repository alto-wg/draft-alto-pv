<!-- This document was prepared using Pandoc2rfc, https://github.com/miekg/pandoc2rfc -->

  
<section title="Use Case: Capacity Region for Multi-Flow Scheduling" anchor="SecMF">
  
  
  
  
  <t>
    Assume that an application has control over a set of flows, which
    may go through shared links or switches and share a bottleneck. The
    application hopes to schedule the traffic among multiple flows to
    get better performance. The capacity region information for those
    flows will benefit the scheduling. However, existing cost maps can
    not reveal such information.
  </t>
  <t>
    Specifically, consider a network as shown in
    <xref target="MFUseCase"/>. The network has 7 switches (sw1
    to sw7) forming a dumb-bell topology. Switches sw1/sw3 provide
    access on one side, sw2/sw4 provide access on the other side, and
    sw5-sw7 form the backbone. Endhosts eh1 to eh4 are connected to
    access switches sw1 to sw4 respectively. Assume that the bandwidth
    of link eh1 -&gt; sw1 and link sw1 -&gt; sw5 are 150 Mbps, and the
    bandwidth of the rest links are 100 Mbps.
  </t>
  <figure anchor="MFUseCase" align="center" title="Raw Network Topology."><artwork align="center">
                            +------+
                            |      |
                          --+ sw6  +--
                        /   |      |  \
  PID1 +-----+         /    +------+   \          +-----+  PID2
  eh1__|     |_       /                 \     ____|     |__eh2
       | sw1 | \   +--|---+         +---|--+ /    | sw2 |
       +-----+  \  |      |         |      |/     +-----+
                 \_| sw5  +---------+ sw7  |
  PID3 +-----+   / |      |         |      |\     +-----+  PID4
  eh3__|     |__/  +------+         +------+ \____|     |__eh4
       | sw3 |                                    | sw4 |
       +-----+                                    +-----+
</artwork></figure>
  <t>
    
  </t>
  <t>
    The single-node ALTO topology abstraction of the network is shown in
    <xref target="SingleNodeAbs"/>.
  </t>
  <figure anchor="SingleNodeAbs" align="center" title="Base Single-Node Topology Abstraction."><artwork align="center">
           +----------------------+
  {eh1}    |                      |     {eh2}
  PID1     |                      |     PID2
    +------+                      +------+
           |                      |
           |                      |
  {eh3}    |                      |     {eh4}
  PID3     |                      |     PID4
    +------+                      +------+
           |                      |
           +----------------------+
</artwork></figure>
  <t>
    
  </t>
  <t>
    Consider an application overlay (e.g., a large data analysis system)
    which wants to schedule the traffic among a set of end host
    source-destination pairs, say eh1 -&gt; eh2 and eh1 -&gt; eh4. The
    application can request a cost map providing end-to-end available
    bandwidth, using 'availbw' as cost-metric and 'numerical' as
    cost-mode.
  </t>
  <t>
    The application will receive from ALTO server that the bandwidth of
    eh1 -&gt; eh2 and eh1 -&gt; eh4 are both 100 Mbps. But this
    information is not enough. Consider the following two cases:
  </t>
  <t><list style="symbols">
    <t>
      
        Case 1: If eh1 -&gt; eh2 uses the path eh1 -&gt; sw1 -&gt; sw5
        -&gt; sw6 -&gt; sw7 -&gt; sw2 -&gt; eh2 and eh1 -&gt; eh4 uses
        path eh1 -&gt; sw1 -&gt; sw5 -&gt; sw7 -&gt; sw4 -&gt; eh4, then
        the application will obtain 150 Mbps at most.
      
    </t>
    <t>
      
        Case 2: If eh1 -&gt; eh2 uses the path eh1 -&gt; sw1 -&gt; sw5
        -&gt; sw7 -&gt; sw2 -&gt; eh2 and eh1 -&gt; eh4 uses the path
        eh1 -&gt; sw1 -&gt; sw5 -&gt; sw7 -&gt; sw4 -&gt; eh4, then the
        application will obtain only 100 Mbps at most.
      
    </t>
  </list></t>
  <t>
    To allow applications to distinguish the two aforementioned cases,
    the network needs to provide more details. In particular:
    
  </t>
  <t><list style="symbols">
    <t>
      
        The network needs to expose more detailed routing information to
        show the shared bottlenecks.
      
    </t>
    <t>
      
        The network needs to provide the necessary abstraction to hide
        the real topology information while providing enough information
        to applications. 
      
    </t>
  </list></t>
  
  <t>
    The path vector extension defined in this document propose a
    solution to provide these details.
  </t>
  <t>
    See <xref target="I-D.bernstein-alto-topo"/> for a more
    comprehensive survey of use cases where extended network topology
    information is needed.
  </t>
</section>

