<!-- This document was prepared using Pandoc2rfc, https://github.com/miekg/pandoc2rfc -->

  
<section title="Overview of Path Vector Extensions" anchor="SecOverview">
  
  <t>
    This section presents an overview of approaches adopted by the path
    vector extension. It assumes the readers are familiar with cost map
    and endpoint cost service defined in
    <xref target="RFC7285"/>. The path vector extension also
    requires the support of Filtered Property Map defined in
    <xref target="I-D.ietf-alto-unified-props-new"/>.
  </t>
  <t>
    The path vector extension is composed of three building blocks: (1)
    a new cost type to encode path vectors; (2) a new ALTO entity domain
    for unified property extension
    <xref target="I-D.ietf-alto-unified-props-new"/> to encode
    properties of ANEs; and (3) an extension to the cost map and
    endpoint cost resource to provide path vectors and properties of
    ANEs in a single response.
    
  </t>
  <section title="New Cost Type to Encode Path Vectors" anchor="ALTO.PV.CostType">
    
    <t>
      Existing cost types defined in <xref target="RFC7285"/>
      allow only scalar cost values. However, the "path
      vector" abstraction requires to convey vector format
      information. To achieve this requirement, this document defines a
      new cost mode to enable the cost value to carry an array of
      elements, and a new cost metric to take names of ANEs as elements
      in the array. We call such an array of ANEs a path vector. In this
      way, the cost map and endpoint cost service can convey the path
      vector to represent the routing information. Detailed information
      and specifications are given in <xref target="mode-spec"/>
      and <xref target="metric-spec"/>.
    </t>
    
  </section>
  <section title="New ALTO Entity Domain to Provide ANE Properties" anchor="nep-map">
    
    <t>
      The path vector can only represent the route between the source
      and the destination. Although the application can find the shared
      ANEs among different paths, it is not enough for most use cases,
      which requires the bandwidth or delay information of the ANEs. So
      this document adopts the property map defined in
      <xref target="I-D.ietf-alto-unified-props-new"/> to provide
      the general properties of ANEs. The document registers a new
      entity domain called "ane" to represent the ANE.
      The address of the ANE entity is just the ANE name used by the
      path vector. By requesting the property map of entities in the
      "ane" domain, the client can retrieve the
      properties of ANEs in path vectors.
    </t>
    
  </section>
  <section title="Extended Cost Map/Endpoint Cost Service for Compound Resources" anchor="ext-cm-ecs">
    
    <t>
      Providing the path vector information and the ANE properties by
      separated resources have several known benefits: (1) can be better
      compatible with the base ALTO protocol; (2) can make different
      property map resources reuse the same cost map or endpoint cost
      resource. However, it conducts two issues:
    </t>
    <t><list style="symbols">
      <t>
        
          Efficiency: The separated resources will require the ALTO
          client to invoke multiple requests/responses to collect all
          needed information. It increases the communication overhead.
        
      </t>
      <t>
        
          Consistency: The path vectors and properties of ANEs are
          correlated. So querying them one by one may conduct
          consistency issue. Once the path vector changes during the
          client requests the ANE properties, the ANE properties may be
          inconsistent with the previous path vector.
        
      </t>
    </list></t>
    <t>
      To solve these issues, this document introduces an extension to
      cost map and endpoint cost service, which allows the ALTO server
      to attach a property map in the data entry of a cost map or an
      endpoint cost service response.
    </t>
    <t>
      These issues may exist in all general cases for querying separated
      ALTO information resources. But solving this general problem is
      not in the scope of this document.
    </t>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  </section>
</section>

