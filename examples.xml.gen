<!-- This document was prepared using Pandoc2rfc, https://github.com/miekg/pandoc2rfc -->

  
<section title="Examples" anchor="SecExample">
  
  <t>
    This section lists some examples of path vector queries and the
    corresponding responses.
  </t>
  
  <section title="Workflow" anchor="workflow">
    
    <t>
      This section gives a typical workflow of how an ALTO client query
      path vectors using the extension.
    </t>
    <t><list style="numbers">
      <t>
        
          Send a GET request for the whole Information Resource
          Directory.
        
      </t>
      <t>
        
          Look for the resource of the (Filtered) Cost Map/Endpoint Cost
          Service which supports the "ane-path" cost
          metric and get the resource ID of the dependent property map.
        
      </t>
      <t>
        
          Check whether the capabilities of the property map includes
          the desired "prop-types".
        
      </t>
      <t>
        
          Check whether the (Filtered) Cost Map/Endpoint Cost Service
          allows the compound response.
        
      </t>
      <t>
        
          If allowed, the ALTO client can send a request including the
          desired ANE properties to the ALTO server and receive a
          compound response with the cost map/endpoint cost map and the
          property map.
        
      </t>
      <t>
        
          If not allowed, the ALTO client sends a query for the cost
          map/endpoint cost map first. After receiving the response, the
          ALTO client interprets all the ANE names appearing in the
          response and sends another query for the property map on those
          ANE names.
        
      </t>
    </list></t>
  </section>
  <section title="Information Resource Directory Example" anchor="id-example-ird">
    
    <t>
      Here is an example of an Information Resource Directory. In this
      example, filtered cost map "cost-map-pv" doesn't
      support the multi-cost extension but support the path-vector
      extension, "endpoint-multicost-map" supports both
      multi-cost extension and path-vector extension. Filtered Property
      Map "propmap-availbw-delay" supports properties
      "availbw" and "delay".
    </t>
    <figure><artwork>
  {
    "meta": {
      "cost-types": {
        "path-vector": {
          "cost-mode": "array",
          "cost-metric": "ane-path"
        },
        "num-routingcost": {
          "cost-mode": "numerical",
          "cost-metric": "routingcost"
        },
        "num-hopcount": {
          "cost-mode": "numerical",
          "cost-metric": "hopcount"
        }
      }
    },
    "resources": {
      "my-default-networkmap": {
        "uri" : "http://alto.example.com/networkmap",
        "media-type" : "application/alto-networkmap+json"
      },
      "my-default-cost-map": {
        "uri": "http://alto.example.com/costmap/pv",
        "media-type": "application/alto-costmap+json",
        "accepts": "application/alto-costmapfilter+json",
        "capabilities": {
          "cost-type-names": [ "num-hopcount",
                               "num-routingcost" ]
        },
        "uses": [ "my-default-networkmap" ]
      },
      "cost-map-pv": {
        "uri": "http://alto.example.com/costmap/pv",
        "media-type": "application/alto-costmap+json",
        "accepts": "application/alto-costmapfilter+json",
        "capabilities": {
          "cost-type-names": [ "path-vector" ],
          "dependent-property-map": "propmap-availbw-delay"
        },
        "uses": [ "my-default-networkmap" ]
      },
      "endpoint-cost-pv": {
        "uri": "http://alto.exmaple.com/endpointcost/pv",
        "media-type": "application/alto-endpointcost+json",
        "accepts": "application/alto-endpointcostparams+json",
        "capabilities": {
          "cost-type-names": [ "path-vector" ],
          "dependent-property-map": "propmap-availbw-delay",
          "allow-compound-response": true
        }
      },
      "invalid-cost-map" : {
        "uri": "http://alto.example.com/costmap/invalid",
        "media-type": "application/alto-costmap+json",
        "accepts": "application/alto-costmapfilter+json",
        "capabilities": {
          "cost-type-names": [ "path-vector" ],
          "allow-compound-response": true
        },
        "uses": [ "my-default-networkmap" ]
      },
      "propmap-availbw-delay": {
        "uri": "http://alto.exmaple.com/propmap/ane-prop",
        "media-type": "application/alto-propmap+json",
        "accepts": "application/alto-propmapparams+json",
        "capabilities": {
          "domain-types": [ "ane" ],
          "prop-types": [ "availbw", "delay" ]
        },
        "uses": [ "cost-map-pv", "endpoint-cost-pv" ]
      }
    }
  }
</artwork></figure>
  </section>
  <section title="Example # 1" anchor="example-1">
    
    <t>
      Query filtered cost map to get the path vectors.
    </t>
    <figure><artwork>
POST /costmap/pv HTTP/1.1
Host: alto.example.com
Accept: application/alto-costmap+json,
        application/alto-error+json
Content-Length: [TBD]
Content-Type: application/alto-costmapfilter+json

{
  "cost-type": {
    "cost-mode": "array",
    "cost-metric": "ane-path"
  },
  "pids": {
    "srcs": [ "PID1" ],
    "dsts": [ "PID2", "PID3" ]
  }
}
</artwork></figure>
    <figure><artwork>
HTTP/1.1 200 OK
Content-Length: [TBD]
Content-Type: application/alto-costmap+json

{
  "meta": {
    "dependent-vtags": [
      {
        "resource-id": "my-default-networkmap",
        "tag": "75ed013b3cb58f896e839582504f622838ce670f"
      }
    ],
    "cost-type": {
      "cost-mode": "array",
      "cost-metric": "ane-path"
    }
  },
  "cost-map": {
    "PID1": {
      "PID2": [ "ane:L001", "ane:L003" ],
      "PID3": [ "ane:L001", "ane:L004" ]
    }
  }
}
</artwork></figure>
    <t>
      Then query the properties of ANEs in path vectors.
    </t>
    <figure><artwork>
POST /propmap/ane-prop HTTP/1.1
Host: alto.example.com
Accept: application/alto-propmap+json,
        application/alto-error+json
Content-Length: [TBD]
Content-Type: application/alto-propmapparams+json

{
  "entities": [ "ane:L001", "ane:L003", "ane:L004" ],
  "properties": [ "delay" ]
}
</artwork></figure>
    <figure><artwork>
HTTP/1.1 200 OK
Content-Length: [TBD]
Content-Type: application/alto-propmap+json

{
  "meta": {
    "dependent-vtags": [
      {
        "resource-id": "cost-map-pv",
        "tag": "a7d57e120ab63124e3c9a82f7a54bc120fc96216"
      }
    ]
  },
  "property-map": {
    "ane:L001": { "delay": 46},
    "ane:L003": { "delay": 50},
    "ane:L004": { "delay": 70}
  }
}
</artwork></figure>
  </section>
  <section title="Example # 2" anchor="example-2">
    
    <figure><artwork>
POST /endpointcost/pv HTTP/1.1
Host: alto.example.com
Accept: application/alto-endpointcost+json,
        application/alto-error+json
Content-Length: [TBD]
Content-Type: application/alto-endpointcostparams+json

{
  "multi-cost-types": [
    {
      "cost-mode": "array",
      "cost-metric": "ane-path"
    },
    {
      "cost-mode": "numerical",
      "cost-metric": "routingcost"
    }
  ],
  "endpoints": {
    "srcs": [ "ipv4:192.0.2.2" ],
    "dsts": [ "ipv4:192.0.2.89",
              "ipv4:203.0.113.45",
              "ipv6:2001:db8::10" ]
  }
}
</artwork></figure>
    <figure><artwork>
HTTP/1.1 200 OK
Content-Length: [TBD]
Content-Type: application/alto-endpointcost+json

{
  "meta": {
    "cost-type": [
      {"cost-mode": "array", "cost-metric": "ane-path"}
    ]
  },
  "endpoint-cost-map": {
    "ipv4:192.0.2.2": {
      "ipv4:192.0.2.89":   [ "ane:L001", "ane:L003",
                             "ane:L004" ],
      "ipv4:203.0.113.45": [ "ane:L001", "ane:L004",
                             "ane:L005" ],
      "ipv6:2001:db8::10": [ "ane:L001", "ane:L005",
                             "ane:L007" ]
    }
  }
}
</artwork></figure>
    <figure><artwork>
POST /endpointcost/pv HTTP/1.1
Host: alto.example.com
Accept: application/alto-endpointcost+json,
        application/alto-error+json
Content-Length: [TBD]
Content-Type: application/alto-endpointcostparams+json

{
  "entities": [ "ane:L001", "ane:L003", "ane:L004",
                "ane:L005", "ane:L007" ],
  "properties": [ "availbw" ]
}
</artwork></figure>
    <figure><artwork>
HTTP/1.1 200 OK
Content-Length: [TBD]
Content-Type: application/alto-propmap+json

{
  "meta": {
    "dependent-vtags": [
      {
        "resource-id": "endpoint-cost-pv",
        "tag": "12c0889c3c0892bb67df561ed16d93f5d1fa75cf"
      }
    ]
  },
  "property-map": {
    "ane:L001": { "availbw": 50 },
    "ane:L003": { "availbw": 48 },
    "ane:L004": { "availbw": 55 },
    "ane:L005": { "availbw": 60 },
    "ane:L007": { "availbw": 35 }
  }
}
</artwork></figure>
  </section>
  <section title="Example #3" anchor="example-3">
    
    <figure><artwork>
POST /endpointcost/pv HTTP/1.1
Host: alto.example.com
Accept: application/alto-endpointcost+json,
        application/alto-error+json
Content-Length: [TBD]
Content-Type: application/alto-endpointcostparams+json

{
  "multi-cost-types": [
    {
      "cost-mode": "array",
      "cost-metric": "ane-path"
    },
    {
      "cost-mode": "numerical",
      "cost-metric": "routingcost"
    }
  ],
  "endpoints": {
    "srcs": [ "ipv4:192.0.2.2" ],
    "dsts": [ "ipv4:192.0.2.89",
              "ipv4:203.0.113.45",
              "ipv6:2001:db8::10" ]
  },
  "properties": [ "delay", "availbw" ]
}
</artwork></figure>
    <figure><artwork>
HTTP/1.1 200 OK
Content-Length: [TBD]
Content-Type: application/alto-endpointcost+json

{
  "meta": {
    "dependent-vtags": [
      {
        "resource-id": "propmap-availbw-delay",
        "tag": "bb6bb72eafe8f9bdc4f335c7ed3b10822a391cef"
      }
    ],
    "cost-type": [
      {"cost-mode": "array", "cost-metric": "ane-path"}
    ]
  },
  "endpoint-cost-map": {
    "ipv4:192.0.2.2": {
      "ipv4:192.0.2.89":   [ "ane:L001", "ane:L003",
                             "ane:L004" ],
      "ipv4:203.0.113.45": [ "ane:L001", "ane:L004",
                             "ane:L005" ],
      "ipv6:2001:db8::10": [ "ane:L001", "ane:L005",
                             "ane:L007" ]
    }
  },
  "property-map": {
    "ane:L001": { "availbw": 50, "delay": 46 },
    "ane:L003": { "availbw": 48, "delay": 50 },
    "ane:L004": { "availbw": 55, "delay": 70 },
    "ane:L005": { "availbw": 60, "delay": 100 },
    "ane:L007": { "availbw": 35, "delay": 100 }
  }
}
</artwork></figure>
  </section>
</section>

